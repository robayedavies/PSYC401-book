# Introduction to the linear model {#sec-lm-intro-intro}

```{r libraries-hide}
#| echo: false
#| warning: false
library(datasauRus)
library(faux)
library(ggExtra)
library(ggridges)
library(kableExtra)
library(knitr)
library(lme4)
library(patchwork)
library(tidyverse)
```

```{r readin-hide}
#| warning: false
#| echo: false
# -- code to read in the aggregated subject level data from the clearly-understood data set

# -- study one
study.one.gen <- read_csv("study-one-general-participants.csv")

# -- study two
study.two.gen <- read_csv("study-two-general-participants.csv")
```

## Overview {#sec-lm-intro-overview}

Welcome to your overview of the work we will do together in **Week 8**.

This week, we focus on learning **how to predict** people: predicting observations about us (e.g., our attributes) or about the things we make or do.
To do this, we will learn to think about and work with **linear models**.

Looking ahead to your professional lives, learning about linear models will equip you to do behavioural analysis in a wide range of contexts, from clinical research to business intelligence. 

As students, now, learning about linear model analyses in the context of the **Clearly understood** project will help you to understand how to critically evaluate research when you read about it (or write about it) in research reports.

You will see that the linear model is *very* flexible and powerful so learning to use it effectively involves not only learning to code analyses but also learning to think critically about what it is you want to do with it.

## Our learning goals {#sec-lm-intro-goals}

We continue to develop your critical thinking while we strengthen your practical skills.

**1. Critical thinking**

-   *Concepts*: how we go from ideas and questions to hypotheses.

As psychologists, we often want to ask questions like these:

- Does variation in one measure (X) predict variation in another variable (Y)?
- What are the factors that influence outcome Y?
- Is a theoretical model consistent with observed behaviour?

**2. Practical skills**

To enable you to answer questions like these, you will learn how to:

-   *Skills* -- code linear models;
-   *Skills* -- identify and interpret model statistics;
-   *Concepts and skills* -- critically evaluate the results;
-   *Concepts and skills* -- communicate the results.

## Learning resources {#sec-lm-intro-resources}

You will see, next, the lectures we share to explain the concepts you will learn about, and the practical data analysis skills you will develop (@sec-lm-intro-lectures). Then you will see information about the practical materials you can use to build and practise your skills (@sec-lm-intro-practical).

Every week, you will learn best if you *first* watch the lectures *then* do the practical exercises.

::: callout-tip
## Linked resources
1. In @sec-associations, we share materials to support your development of critical thinking about associations, and your development of practical skills in working with correlation-based analyses.
2. In @sec-lm-dev-intro, we share materials to extend your capacity to use linear models, to answer more and different kinds of research questions.
:::

### Lectures {#sec-lm-intro-lectures}

The lecture materials for this week are presented in four short parts. 

Click on a link and your browser should open a tab showing the *Panopto* video for the lecture part.

1. Part 1 (13 minutes) **Focus on the linear model**: The concepts and skills we will learn about in week 8: our aims, the kind of questions we can answer with linear models, and how we get from those questions to sensible linear model analyses.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=9d4653c0-9ea2-4437-a74f-af5f00b2fd2e&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="PSYC401-lm-intro-1" ></iframe>
```

2. Part 2 (15 minutes): the first key concept --- how we use linear models to predict average outcomes.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=71eaffe1-5066-425c-9ce2-af5f00b79730&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="PSYC411-lm-intro-2" ></iframe>
```

3. Part 3 (12 minutes): the second key concept --- how we ensure that linear models make the best predictions given the data we have.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=a08f12af-606a-4be0-90ae-af5f00bc1491&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="PSYC411-lm-intro-3" ></iframe>
```

4. Part 4 (14 minutes): the key skills --- coding linear models, reading model results, and writing reports of those results.

```{=html}
<iframe src="https://lancaster.cloud.panopto.eu/Panopto/Pages/Embed.aspx?id=a16c627e-609b-49db-b683-af5f00bfb15f&autoplay=false&offerviewer=true&showtitle=true&showbrand=true&captions=false&interactivity=all" height="405" width="720" style="border: 1px solid #464646;" allowfullscreen allow="autoplay" aria-label="Panopto Embedded Video Player" aria-description="PSYC411-lm-intro-4" ></iframe>
```

::: callout-tip
## Download the lecture slides
The slides presented in the videos can be downloaded here:

- [The slides](files/401-linear-model-intro.html) exactly as presented (12 MB). 

You can download the web page `.html` file and click on it to open it in any browser (e.g., Chrome, Edge or Safari). The slide images are high quality so the file is quite big and may take a few seconds to download.
:::

We are going to work through some practical exercises, next, to develop your critical thinking and practical skills for working with linear models.

### Practical materials: data and R-Studio {#sec-lm-intro-practical}

We will work with two data files which you can download by clicking on their names (below):

-   [`study-one-general-participants.csv`](files/study-one-general-participants.csv).
-   [`study-two-general-participants.csv`](files/study-two-general-participants.csv).

Once you have downloaded the files, you will need to upload them to the R-Studio server to access and use the R files.

::: callout-important
Here is a link to the sign-in page for [R-Studio Server](https://psy-rstudio.lancaster.ac.uk/auth-sign-in?appUri=%2F)
:::

### Practical materials guide {#sec-lm-intro-practical-guide}

You will find that the practical exercises are simpler to do if you follow these steps in order.

1. **The data** --- We will take a quick look at what is inside the data files so you know what everything means.
2. **The `how-to` guide** --- We will go through the practical analysis and visualization coding steps, showing all the code required for each step.
3. **The `practical` exercises** --- We will set out the tasks, questions and challenges that you should complete to learn the practical skills we target this week.

This week --- **Week 8** --- we consolidate what you have been learning, so your critical thinking and practical skills have a firm foundation *then* we extend your skills by learning how to do new things.

::: callout-tip
## Week 8 parts

1. Set-up
2. Load the data
3. Revision: using histograms to examine the distributions of variables. Then something **new**: adding annotations to plots to focus the attention of your audience.
4. Revision: using scatterplots to examine associations between variables. Then something **new**: producing grids of scatterplots to show comparisons.
5. Revision: using correlations to to answer research questions --- making sure you are comfortable with the calculation and interpretation of correlation analyses.
6. **New**: using a linear model to answer research questions.
7. **New**: using a linear model to make predictions.
:::

We learn these skills so that we can answer research questions like:

1. What person attributes predict success in understanding?
2. Can people accurately evaluate whether they correctly understand written health information?
  
These kinds of research questions can often be answered through analyses using linear models.
We typically use linear models to estimate the association between predictors and outcomes.

When we do these analyses, we need to think about how we report the results:  

- We usually need to report information about the kind of model we specify;
- We will need to report the nature of the association estimated in our model;
- We usually need to decide if (i.) the association is significant? (ii.) does the association reflect a positive or negative relationship between outcome and predictor? (iii.) is the association we see in our sample data relatively strong or weak?

As we progress, we will consolidate and extend learning on data visualization so that we can produce eye-catching, appealing, plots for professional audiences.

#### The data files {#sec-lm-intro-practical-data}

Each of the data files we will work with has a similar structure.

Here are what the first few rows in the data file `study.two.gen` looks like:

```{r head}
#| warning: false
#| echo: false
kable(head(study.two.gen))
```

::: callout-tip
The webpage has a slider under the data table window, so you can scroll across the columns: move your cursor over the window to show the slider.
:::

When you look at the data table, you can see the columns:

-   `participant_ID` participant code
-   `mean.acc` average accuracy of response to questions testing understanding of health guidance
-   `mean.self` average self-rated accuracy of understanding of health guidance
-   `study` variable coding for what study the data were collected in
-   `AGE` age in years
-   `HLVA` health literacy test score
-   `SHIPLEY` vocabulary knowledge test score
-   `FACTOR3` reading strategy survey score
-   `GENDER` gender code
-   `EDUCATION` education level code
-   `ETHNICITY` ethnicity (Office National Statistics categories) code

#### The how-to guide {#sec-associations-practical-how-to}

We will take things *step-by-step*.

Make sure you complete each part, task and question, in order, before you move on to the next one.

#### How-to Part 1: Set-up

To begin, we set up our environment in R.

##### How-to Task 1 -- Run code to empty the R environment

```{r}
#| eval: false
rm(list=ls())                            
```

##### How-to Task 2 -- Run code to load libraries

Load libraries using `library()`.

```{r}
#| eval: false
library("patchwork")
library("tidyverse")
```

#### How-to Part 2: Load and examine the data

##### How-to Task 3 -- Read in the data file we will be using

The code in the `how-to` guide was written to work with the data file:

- `study-one-general-participants.csv`.

Read in the data file -- using `read_csv()`.

```{r}
#| eval: false
study.one.gen <- read_csv("study-one-general-participants.csv")
```

::: callout-tip
Last week, we started working with the **online help** information on R functions. Let's build on that.

- You can read the technical information about the `read_csv()` function here:

<https://readr.tidyverse.org/reference/read_delim.html>

- Take a look around the `{tidyverse}` webpages: expert professionals use information like this whenever they try to figure out how to do something.
:::

##### How-to Task 4 -- Inspect the data file

Use the `summary()` function to take a look.

```{r}
summary(study.one.gen)
```

::: callout-tip
- `summary()` will give you either descriptive statistics for variable columns classified as numeric or will tell you that columns in the dataset are not numeric.
:::

##### How-to Task 5 -- Draw histograms to examine the distributions of variables

You can use the `as.factor()` function you used in Week 5.

```{r}
#| eval: false
study.one.gen$study <- as.factor(study.one.gen$study)
```

> Q.4. After you have done this, what information does `summary()` give you about the variable `study`?

> A.4. We can see the number 169 beside the word `studyone`: this tells us that there are 169
observations, in the column, each one is a value: the word or character string `studyone`.

::: callout-tip
Remember from Week 3 that we can only count how many times a category value (or factor level) occurs: here, we are counting how many times the word `studyone` occurs in the factor column `study`.
:::

#### How-to Part 3: Visualize associations

##### How-to Task 6 -- Draw scatterplots to examine associations between variables

You have seen these code moves before, in previous classes (weeks 3 and 4): we are **consolidating** skills by practising your coding in different contexts, using different data.

We **extend** your skills by adding some new moves.

Create scatterplots to examine the association between some variables.

::: callout-tip
We are working with `geom_point()` and you need `x` and `y` aesthetic mappings.
:::

For example, we can draw a scatterplot to examine the association between `mean.self` and `mean.acc`.

```{r}
ggplot(data = study.one.gen, aes(x = mean.self, y = mean.acc)) + 
    geom_point()
```  

Examine this plot --- it shows: the possible association between x-axis variable `mean.self` and y-axis variable `mean.acc`.

You have seen this kind of code before but it will help your learning if, now, we take a look at the code step-by-step.

The plot code moves through the following steps:  

1. `ggplot(...)` makes a plot.
2. `ggplot(data = study.one.gen, ...)` uses the `study.one.gen` data-set.
3. `ggplot(...aes(x = mean.self, y = mean.acc))` uses two aesthetic mappings.
4. `geom_point()` show the mappings as points.

::: callout-tip
What are *aesthetic mappings*?

Aesthetic mappings translate data information -- numbers or values in column variables -- into things you can see in plots.

For a scatterplot, we need to translate values for two variables into the position of each point in the plot.

Here:

- `x = mean.self` maps `mean.self` values to x-axis (horizontal, left to right) positions.
- `y = mean.acc` maps `mean.acc` values to y-axis (vertical, bottom to top) positions.
:::
  
Now do scatterplots with any pair of numeric variables you like. 

Remember that we saw with `summary()` that not every variable consists of numbers.

Check out the example code, below.

```{r}  
#| eval: false
ggplot(data = study.one.gen, aes(y = mean.self, x = mean.acc)) +
    geom_point()  

ggplot(data = study.one.gen, aes(x = AGE, y = mean.self)) +
  geom_point()  
  
ggplot(data = study.one.gen, aes(x = SHIPLEY, y = mean.self)) +
  geom_point()  

ggplot(data = study.one.gen, aes(x = HLVA, y = mean.self)) +
  geom_point()  
```

##### How-to Task 7 -- Edit the scatterplots to change how they look

Edit the appearance of a plot step-by-step.

We are going to edit:

1. the appearance of the points using alpha and size;
2. the colour of the background using `theme_bw()`;
3. the appearance of the labels using `labs()`.

We make the changes, one change at a time.

You have seen one of these moves before and you can guess at how to do the others.
Click on the drop-down view to see the code but, if you want a challenge, try first to write the code on your own.

1. the appearance of the points using alpha and size

:::{.callout-tip collapse="true"}
## Code
```{r}
ggplot(data = study.one.gen, aes(x = HLVA, y = mean.self)) +
  geom_point(alpha = 0.5, size = 2) 
```
:::

2. the colour of the background using `theme_bw()`

:::{.callout-tip collapse="true"}
## Code
```{r}
ggplot(data = study.one.gen, aes(x = HLVA, y = mean.self)) +
  geom_point(alpha = 0.5, size = 2)  +
  theme_bw()
```
:::

3. the appearance of the labels using `labs()`

:::{.callout-tip collapse="true"}
## Code
```{r}
ggplot(data = study.one.gen, aes(x = HLVA, y = mean.self)) +
  geom_point(alpha = 0.5, size = 2)  +
  theme_bw() +
  labs(x = "HLVA", y = "mean self rated accuracy")
```  
:::

::: callout-tip
The arguments `alpha` and `size` can change the appearance of most geometric objects (geoms) in ggplot:

- in the code example, here, we vary the `alpha` number to change how opaque or transparent the points are;
- and we vary the size number to vary the size of the points.
:::

##### How-to Task 8 -- Now experiment

There are no right answers here: edit the appearance of your plots by changing alpha, size and colour of points.

::: callout-tip
Play is an important part of learning.

- Experimenting with how plots look is a key element in becoming a master at data visualization. You won't know what looks good to you unless you try different things.
:::

If you really want to extend your skills, it is really important that you learn how to find useful online help.

> Q.5. Can you find the ggplot reference page on scatterplots? 

:::{.callout-tip collapse="true"}
## Hint
Do a search with the keywords: `ggplot reference geom_point`
:::

:::{.callout-tip collapse="true"}
## Answer
> A.5. You can find reference information here: <https://ggplot2.tidyverse.org/reference/geom_point.html>
:::

> Q.6. Can you change the colour of the points to a colour you like?

:::{.callout-tip collapse="true"}
## Hint
Do a search with the keywords: `ggplot colours`.

Useful information on colour can be found here:

<https://r-graphics.org/recipe-colors-setting>

or 

<http://www.cookbook-r.com/Graphs/Colors_(ggplot2)/>
:::

:::{.callout-tip collapse="true"}
## Answer
> A.6. Here is how you do it: R will recognize many English colour names.

```{r}
#| eval: false
ggplot(data = study.one.gen, aes(x = HLVA, y = mean.self)) +
  geom_point(alpha = 0.5, size = 2, colour = "hotpink")  +
  theme_bw() +
  labs(x = "HLVA", y = "mean self rated accuracy")
```
:::

::: callout-important
Now you: experiment!
:::

#### How-to Part 4: Analyse associations

##### How-to Task 9 -- Use correlation to to answer a research question

Examine associations between variables using correlation.

One of our research questions is:

2. Can people accurately evaluate whether they correctly understand written health information?

We can answer this question by examining whether mean self-rated accuracy of understanding correlates with mean accuracy of understanding.
The logic is that if we can accurately rate our own understanding (from bad to good) then that rating should be associated -- should be correlated with -- how accurately we can actually respond to questions that test that understanding.

> Q.7. How do we examine the correlation between mean self-rated accuracy (`mean.self`) and mean accuracy (`mean.acc`)?

:::{.callout-tip collapse="true"}
## Hint
Remember from the Week 6 lecture, that we use `cor.test()`:
:::

Can you figure out how to code a correlation test?
It helps with your learning if you first try to anticipate what the code will look like.
Then reveal the code, below, to see what you guessed right.
(Getting some things right, and some things wrong, is part of the learning process.)

:::{.callout-tip collapse="true"}
## Code
> A.7. Here is how you do it: take a look at the code and the results of the correlation test.

```{r}
cor.test(study.one.gen$mean.acc, study.one.gen$mean.self, method = "pearson",  alternative = "two.sided")
```
:::

> Q.3. What is r, the correlation coefficient?

:::{.callout-tip collapse="true"}
## Answer
> A.3. r = 0.4863771
:::

> Q.4. Is the correlation significant?

:::{.callout-tip collapse="true"}
## Answer
> A.4. r is significant
:::

> Q.5. What are the values for t and p for the significance test for the correlation?

:::{.callout-tip collapse="true"}
## Answer
> A.5. t = 7.1936, p = 2.026e-11
:::

> Q.6. What do you conclude, given the correlation results?

:::{.callout-tip collapse="true"}
## Hint
Review the scatterplot you drew earlier (or draw one now) to examine the shape of the association between these variables.
:::

:::{.callout-tip collapse="true"}
## Answer
> A.6. `mean.acc` and `mean.self` are positively correlated suggesting that as 
# `mean.acc` scores increase so also do `mean.self` scores
:::





















